<div class="floatables bible-research">
    <div class="bible-viewer"></div>
    <div class="meta" id="bible-research"></div>
</div>

<hr>

<a class="return" href="/forest/eye/church/library">
    Return to the Library
</a>

<script src="/js/util/element.js"></script>
<script src="/js/util/buttons.js"></script>
<script src="/js/util/search-box.js"></script>
<script src="/js/util/browser.js"></script>
<script src="/js/bible-viewer.js"></script>
<script src="/js/entity.js"></script>
<script src="/js/floatable.js"></script>
<script>   
    const metaResearch = new MetaBrowser({
        header: "Bible Research",
        id: "bible-research"
    });
    metaResearch.render();
    metaResearch.addService("bible-research-persons", {
        fields: new NBField({
            name: "persons",
            label: "Person: ",
            placeholder: "No Persons"
        }, [
            new NBField({
                name: "name",
                placeholder: "No Persons",
                type: "string"
            }),
            new NBField({
                name: "aliases",
                multiple: true,
                label: "Aliases: ",
                placeholder: "No Aliases",
                type: "string"
            }),
            new NBField({
                name: "description",
                label: "Description: ",
                placeholder: "No Description",
                type: "long-string"
            }),
        ]),
        label: "Persons",
        editable: true,
        multiple: true,
        toLoad: async () => {
            let res = await base.loadAll("bible-research-persons");
            return res;
        },
        toSave: async (item, deleting) => {
            await base.do("save-person", { item, deleting });
        }
    });
    metaResearch.addService("bible-research-themes", {
        fields: new NBField({
            name: "themes",
            label: "Themes: ",
            placeholder: "No Themes"
        }, [
            new NBField({
                name: "name",
                label: "Theme: ",
                placeholder: "No Theme",
                type: "string"
            }),
            new NBField({
                name: "aliases",
                multiple: true,
                label: "Aliases: ",
                placeholder: "No Aliases",
                type: "string"
            }),
            new NBField({
                name: "description",
                label: "Description: ",
                placeholder: "No Description",
                type: "long-string"
            }),
        ]),
        label: "Themes",
        editable: true,
        multiple: true,
        toLoad: async () => {
            let res = await base.loadAll("bible-research-themes");
            return res;
        },
        toSave: async (item, deleting) => {
            await base.do("save-theme", { item, deleting });
        }
    });
    
    const bibleViewer = new BibleViewer();
    bibleViewer.render();

    const floatBoard = new FloatBoard();
</script>