<link rel="stylesheet" href="/styles/browser.css">
<style>
    <%- include("./wizard-tower.css"); %>
</style>

<p>
    The tower stands before you, wooden door locked.
</p>

<div class="tower">
    <section class="floor" id="items">
        <h4>Items</h4>
        <button id="toggle">Toggle</button>
    
        <div class="content invisible">
            <div class="browser" id="items"></div>
        </div>
    </section>
    
    <section class="floor" id="users">
        <h4>Users</h4>
        <button id="toggle">Toggle</button>
    
        <div class="content invisible">
            <div class="browser" id="users"></div>
        </div>
    </section>

    <div id="cover"></div>
</div>

<p>
    "Blessed is the one who reads aloud the words of this prophecy, 
    hears it and takes to heart what is written in it, because the 
    time is near," is inscribed on the marble tablet embedded in 
    the center of the door.
</p>

<p id="extra"></p>

<hr>

<button class="to" id="knock">
    Knock on the Tower's Door
</button>

<hr>

<a class="to" href="/forest/eye/filter/wyatts-house">
    Go to Wyatt's House
</a>

<a class="to" href="/forest/eye/filter/pond">
    Go to the Pond
</a>

<a class="to" href="/forest/eye/keep">
    Go to the Keep
</a>

<hr>

<a class="return" href="/forest/eye/school">
    Return to the School
</a>

<a class="return" href="/forest/eye/inn">
    Return to the Inn
</a>

<script src="/js/util/browser.js"></script>
<script>
    $("#knock").on("click", function knock() {
        $("#extra").text("You knocked on the tower's door. Surely you've been heard.");
        $("#knock").toggleClass("invisible");
    });

    <% if (user.authLevels.includes("Creator")) { %>
        $("#knock").toggleClass("invisible");
        $("#cover").toggleClass("invisible");
        $(".floor button#toggle").on("click", function (e) {
            $(e.target.parentElement).find(".content").toggleClass("invisible");
        });
        
        let itemFields = new NBField({
            name: "item",
            label: "Item: ",
            placeholder: "No item",
            multiple: true
        }, [
            new NBField({
                name: "name",
                label: "Name: ",
                placeholder: "Name"
            }, "string"),
            new NBField({
                name: "short",
                label: "Short Description: ",
                placeholder: "No Description"
            }, "string"),
            new NBField({
                name: "long",
                label: "Long Description: ",
                placeholder: "No Description"
            }, "long-string")
        ]);
        const itemBrowser = new Browser("items", itemFields, true, null, {
            onSaveOne: "save-item",
            onDeleteOne: "delete-item"
        });

        let userFields = new NBField({
            name: "user",
            label: "User: ",
            placeholder: "No user",
            multiple: true
        }, [
            new NBField({
                name: "username",
                label: "Username: ",
                placeholder: "No Username"
            }, "string"),
            new NBField({
                name: "authLevels",
                label: "Auth Levels: ",
                placeholder: "No Auth",
                multiple: true
            }, "string"),
            new NBField({
                name: "email",
                label: "Email: ",
                placeholder: "No Email"
            }, "string")
        ]);
        const userBrowser = new Browser("users", userFields, true, null, {
            onSaveOne: "save-user",
            onDeleteOne: "delete-user"
        });

        base.do("get-items").then((res) => {
            itemBrowser.load(res.data);
        });

        base.do("get-users").then((res) => {
            userBrowser.load(res.data);
        });
    <% } %>
</script>