<style>
    <%- include("./fields.css") %>
</style>

<p>
    This is the fields.
</p>

<div class="dialogue" id="berry"></div>
    
<div class="dialogue" id="zerry"></div>

<div class="game" id="basketball"></div>

<hr>

<a class="go" href="/forest/eye/fields/soil">
    Go to the Soil
</a>

<hr>

<a class="to" href="/forest/eye/artisans">
    Head to the Artisans
</a>

<a class="to" href="/forest/eye/library">
    Head to the Library
</a>

<a class="to" href="/forest/eye/filter/cave">
    Head into the Filter
</a>

<script src="/js/dialogue.js"></script>
<script src="/js/games/relatives.js"></script>
<script>
    //npc dialogues
    let berryTree = function () {
        if (Dialogue.checkGlobalFlag("longTalkWithBerry")) {
            return [
                Dialogue.textSlide(`That was my answer too! But nooo....`)
            ];
        }
        else if (this.checkFlag("accepted")) {
            return [
                Dialogue.textSlide(`If a portal approached a cube at a certain velocity,
                                             would the cube receive that velocity after completely passing through the portal?`),
                Dialogue.buttonSlide([
                    Dialogue.button("Yes.", "longTalkWithBerry", true),
                    Dialogue.button("No.", "longTalkWithBerry", true)
                ])
            ];
        }
        else if (this.checkFlag("declined")) {
            return [
                Dialogue.textSlide("Wow. I honestly didn't expect you to decline like that."),
                Dialogue.textSlide("To each their own I guess.", 10)
            ];
        }
        else if (this.checkFlag("responded")) {
            return [
                Dialogue.textSlide("Great, I got your attention! Not many people come around here."),
                Dialogue.textSlide("Would you mind settling a debate I'm having with my acquaintance below?"),
                Dialogue.buttonSlide([
                    Dialogue.button("Sure.", "accepted"),
                    Dialogue.button("No Way.", "declined")
                ])
            ];
        }
        else {
            return [
                Dialogue.textSlide("Hey! Yeah, it's the talking cat on the porch!"),
                Dialogue.buttonSlide([
                    Dialogue.button("Hi!", "responded"),
                    Dialogue.button("Hi?", "responded")
                ]),
                Dialogue.textSlide("Hello?"),
                Dialogue.buttonSlide([
                    Dialogue.button("Hi!", "responded"),
                    Dialogue.button("Hi?", "responded")
                ])
            ];
        }
    };
    let berryDialogue = new Dialogue("berry", 1900, berryTree, "/img/npcs/berry.png");

    let zerryTree = function () {
        if (this.checkFlag("responded")) {
            return [
                Dialogue.textSlide("Nice to meet you!"),
                Dialogue.textSlide("I don't know what else to say...", 10)
            ];
        }
        else if (Dialogue.checkGlobalFlag("longTalkWithBerry")) {
            return [
                Dialogue.textSlide("I see you're not interested in talking to me...")
            ];
        }
        else {
            return [
                Dialogue.textSlide("..."),
                Dialogue.textSlide("Hello. My name is Zerry."),
                Dialogue.buttonSlide([
                    Dialogue.button("Hello.", "responded")
                ]),
                Dialogue.textSlide("Hello?"),
                Dialogue.buttonSlide([
                    Dialogue.button("Hello.", "responded")
                ])
            ];
        }
    };
    let zerryDialogue = new Dialogue("zerry", 2050, zerryTree, "/img/npcs/zerry.png");

    class BasketballGame extends RelativesGame {
        constructor() {
            super("basketball");

            this.render();
            this.beat();
        }

        addInputs = () => {
            
            this.$header = $(`<h4>Basketball</h4>`).appendTo(this.$inputsBox);

            this.$angleLabel = $(`<h6>Angle:</h6>`).appendTo(this.$inputsBox);
            this.$inputs.angle = $(`<input type="number" id="angle">`).appendTo(this.$inputsBox);

            this.$powerLabel = $(`<h6>Power:</h6>`).appendTo(this.$inputsBox);
            this.$inputs.power = $(`<input type="number" id="power">`).appendTo(this.$inputsBox);
        }

        addOutputs = () => {
            this.$outputs.result = $(`<p id="result">Result: </p>`).appendTo(this.$outputsBox);
        }

        resolve = (inputs, extResponse) => {
            if (inputs.angle > 50 && inputs.angle < 80 && inputs.power > 5 && inputs.power < 9) this.$outputs.result.text("Result: Okay");
            else this.$outputs.result.text("Result: Not");
        }

        update = () => {

        }
    }

    const basketball = new BasketballGame();
</script>