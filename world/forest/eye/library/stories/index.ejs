<style>
    <%- include("./index.css") %>
</style>
<link rel="stylesheet" href="/styles/browser.css">

<div class="floatables">
    <div class="browser" id="stories"></div>
    <div class="search-box" id="stories"></div>
    <div class="meta buttons" id="stories"></div>
</div>

<hr>

<a class="return" href="/forest/eye/library/lobby">
    Return to the Lobby
</a>

<script src="/js/util/buttons.js"></script>
<script src="/js/util/search-box.js"></script>
<script src="/js/util/browser.js"></script>
<script src="/js/entity.js"></script>
<script src="/js/floatable.js"></script>
<script>
    const browser = new Browser();
    const search = new SearchBox();
    const metaBrowser = new MetaBrowser("Your Stories", browser, search);
    metaBrowser.addService("stories", {
        fields: new NBField({
            name: "story",
            label: "Story: ",
            placeholder: "No Story",
            multiple: true
        }, [
            new NBField({
                name: "title",
                label: "Title: ",
                placeholder: "Story Title"
            }, "string"),
            new NBField({
                name: "img",
                label: "Image: ",
                placeholder: "/img/food/default.jpg"
            }, "image"),
            new NBField({
                name: "source",
                label: "Source: ",
                placeholder: "Recipe Name"
            }, "string"),
            new NBField({
                name: "content",
                label: "Content: ",
                placeholder: "Recipe Name"
            }, "long-string")
        ]),
        label: "Story:",
        editable: true,
        multiple: true,
        toLoad: async () => {
            return await base.load("stories");
        },
        toSave: async (item, which, deleting) => {
            await base.do("save-story", { item, which, deleting });
        }
    });

    const floatBoard = new FloatBoard();
</script>