<div class="clipboard on-counter for-login">
    <button onclick="clickClose()" class="close">X</button>
    <div class="application">
        <% if (user) { %>
            <div class="auth-form" id="set-form">
                <h5>NotherBase</h5>
                <h6>Change Your Password</h6>
                <input type="password" name="old-password" placeholder="old password" id="change-old-password">
                <input type="password" name="password" placeholder="new password" id="change-password">
                <input type="password" name="confirmation" placeholder="new password again" id="change-confirmation">
                <button id="set-button">Set Password</button>
                <p id="set-info"></p>
                <button onclick="toEmail()" id="to-email">Manage Email</button>
            </div>
            <div class="auth-form invisible" id="manage-email">
                <h5>NotherBase</h5>
                <h6>Get a One-Time Password</h6>
                <button onclick="sendOTP()" id="otp-button">Send OTP to Your Email</button>
                <h6>Change Your Email</h6>
                <input type="password" name="password" placeholder="password" id="email-password">
                <input type="email" name="email" placeholder="<%= user.memory.data.email %>" id="change-email">
                <button onclick="changeEmail()" id="email-button">Change Email</button>
                <p id="email-info"></p>
                <button onclick="toPass()" class="to-pass">Manage Password</button>
            </div>
        <% } else { %>
            <div class="auth-form" id="login-form">
                <h5>NotherBase</h5>
                <h6>Login to Your Account</h6>
                <input type="test" name="username" placeholder="username" id="login-user">
                <input type="password" name="password" placeholder="password" id="login-pass">
                <button id="login-button">Login</button>
                <p id="login-info"></p>
            </div>
        <% } %>
    </div>
    <div ></div>
    <div class="clamp"></div>
    <div class="scribbles" id="login-scribbles">Login<br><br>If you can read this you're a nerd.</div>
</div>

<div class="clipboard on-counter for-register">
    <button onclick="clickClose()" class="close">X</button>
    <div class="application">
        <% if (user) { %>
            <div class="auth-form" id="data-form">
                <h5>NotherBase</h5>
                <h6>Manage Your Data</h6>
                <button onclick="downloadData()">Download Data</button>
                <input type="password" id="data-password" placeholder="password">
                <button onclick="deleteData()">Delete Data</button>
                <input type="file" id="fileInput">                        
                <button onclick="importData()">Import Data</button>
                <p id="data-info"></p>
                <button onclick="toSessions()">Manage Sessions</button>
            </div>
            <div class="auth-form invisible" id="manage-sessions">
                <h5>NotherBase</h5>
                <h6>Manage Your Sessions</h6>
                <ul class="active-sessions">
                    <%  let keys = Object.keys(user.memory.data.sessions);
                        for (let key of keys) { %>
                        <li>
                            <%= key %>: <%= (new Date(user.memory.data.sessions[key])).toLocaleString() %>
                            <button onclick='destroySession("<%= key %>")'>X</button>
                        </li>
                    <% } %>
                </ul>
                <p id="session-info"></p>
                <button onclick="toData()">Manage Data</button>
            </div>
        <% } else { %>
            <div class="auth-form" id="register-form">
                <h5>NotherBase</h5>
                <h6>Register a New Account</h6>
                <input type="text" name="username" placeholder="username" id="register-user">
                <input type="password" name="password" placeholder="password" id="register-pass">
                <input type="password" name="confirmation" placeholder="password again" id="register-confirmation">
                <button id="register-button">Register</button>
                <p id="register-info"></p>
            </div>
        <% } %>
    </div>
    <div class="clamp"></div>
    <div class="scribbles" id="register-scribbles">Register<br><br>If you can read this you're a nerd.</div>
</div>

<script>
    let $clipboard = $(".clipboard");
    let $loginUser = $("#login-user");
    let $loginPass = $("#login-pass");
    let $loginButton = $("#login-button");
    let $loginInfo = $("#login-info");
    let $registerUser = $("#register-user");
    let $registerPass = $("#register-pass");
    let $registerConfirmation = $("#register-confirmation");
    let $registerButton = $("#register-button");
    let $registerInfo = $("#register-info");
    let $setForm = $("#set-form");
    let $loginForm = $("#login-form");
    let $changeOldPassword = $("#change-old-password");
    let $changePassword = $("#change-password");
    let $changeConfirmation = $("#change-confirmation");
    let $changeButton = $("#change-button");
    let $setButton = $("#set-button");
    let $setInfo = $("#set-info");
    let $manageEmail = $("#manage-email");
    let $emailPassword = $("#email-password");
    let $changeEmail = $("#change-email");
    let $emailInfo = $("#email-info");
    let $returnButtons = $(".return-button");
    let $dataInfo = $("#data-info");
    let $dataForm = $("#data-form");
    let $manageSessions = $("#manage-sessions");
    let $sessionInfo = $("#session-info");

    //try to login
    $loginButton.on("click", async (e) => {
        let response = await base.attemptLogin($loginUser.val(), $loginPass.val());

        if (response.status === "success") {
            Dialogue.addGlobalFlag("logged-in");
            closeClipboard("for-login");
            keeper.interrupt();
        }
        else {
            $loginInfo.text(response.message);
        }
    });

    //try to register an account
    $registerButton.on("click", async function () {
        if ($registerPass.val() == $registerConfirmation.val()) {
            let response = await base.attemptRegister(
                $registerUser.val(),
                $registerPass.val()
            );

            if (response.status === "success") {
                $registerInfo.text("You hear a nod from deep within the shack. Your new account has been registered.");
            }
            else {
                $registerInfo.text(response.message);
            }
        }
        else {
            $registerInfo.text("The passwords must match.");
        }
    });

    $setButton.on("click", async function () {
        if ($changePassword.val() == $changeConfirmation.val()) {
            let response = await base.changePassword(
                $changeOldPassword.val(),
                $changePassword.val(),
                $changeConfirmation.val()
            );

            if (response.status === "success") {
                $setInfo.text("Password changed successfully.");
            }
            else {
                $setInfo.text("Change Error: " + response.message);
            }
        }
        else {
            $setInfo.text("The passwords must match.");
        }
    });

    let clickClose = () => {
        event.stopPropagation();
        let $currentClipboard = $(event.currentTarget).parent();

        if (!$currentClipboard.hasClass("on-counter")) {
            $currentClipboard.addClass("on-counter");
            $currentClipboard.find(".scribbles").removeClass("invisible");
        }
    }

    let closeClipboard = function closeClipboard(which) {
        let $currentClipboard = $(`.${which}`);

        if (!$currentClipboard.hasClass("on-counter")) {
            $currentClipboard.addClass("on-counter");
            $currentClipboard.find(".scribbles").removeClass("invisible");
        }
    }

    //pick up a clipboard
    $clipboard.on("click", function clickClipboard(e) {
        let $currentClipboard = $(e.currentTarget);

        if ($currentClipboard.hasClass("on-counter")) {
            $clipboard.addClass("on-counter");
            $clipboard.find(".scribbles").removeClass("invisible");
            $currentClipboard.removeClass("on-counter");
            $currentClipboard.find(".scribbles").addClass("invisible");
        }
    });

    let downloadData = async () => {
        $dataInfo.text("Downloading data...");
        let res = await base.downloadData();
        $dataInfo.text(res.message);
    }

    let deleteData = async () => {
        $dataInfo.text("Deleting data...");
        let res = await base.deleteData($('#data-password').val());
        $dataInfo.text(res.message);
    }

    let importData = async () => {
        $dataInfo.text("Importing data...");
        let pass = $('#data-password').val();         
        let file = $('#fileInput')[0].files[0];
        if (file) {
            let res = await base.importData(pass, file);
            $dataInfo.text(res.message);
        }
        else {
            $dataInfo.text("No file selected.");
        }
    }

    let toEmail = function () {
        $setForm.addClass("invisible");
        $manageEmail.removeClass("invisible");
    }

    let toPass = function () {
        $manageEmail.addClass("invisible");
        $setForm.removeClass("invisible");
    }

    let sendOTP = async () => {
        let res = await base.sendOTP();
        $emailInfo.text(res.message);
    }

    let changeEmail = async () => {
        let res = await base.changeEmail($emailPassword.val(), $changeEmail.val());
        $emailInfo.text(res.message);
    }

    let toSessions = function () {
        $dataForm.addClass("invisible");
        $manageSessions.removeClass("invisible");
    }

    let toData = function () {
        $manageSessions.addClass("invisible");
        $dataForm.removeClass("invisible");
    }

    let destroySession = async (sessionID) => {
        let res = await base.do("destroySession", { sessionID: sessionID });
        $sessionInfo.text(res.data);
    }
</script>