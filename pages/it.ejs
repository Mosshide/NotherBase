<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Wyatt Sushinsky</title>
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Chakra+Petch&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="/styles/main.css">
    <link rel="stylesheet" href="/styles/it.css">
</head>
<body>
    <main>
        <h1>IT Request Tracker</h1>
        <label>Organization: <input type="text" id="org"></label>

        <div class="form">
            <div class="spine">
                <h4>Submit a Request</h4><button id="pointer" onclick="tracker.toggleFold('form')">v</button>
            </div>
            <label>
                Title of Request:<input type="text" placeholder="title" id="title">
            </label>
            <label id="desc-label">
                Description:
                <textarea id="description" cols="30" rows="10" placeholder="description"></textarea>
            </label>
            <label id="att-label">
                Attachments:
                <ul>
                    <li><button>+</button></li>
                </ul>
            </label>
            <button id="submit" onclick="tracker.submitTicket()">Submit</button>
        </div>

        <div class="history folded">
            <div class="spine">
                <h4>View Ticket History</h4><button id="pointer" onclick="tracker.toggleFold('history')">^</button>
            </div>
            <label>
                Password:
                <input type="password" id="password">
            </label>
            <label>
                Start Date:
                <input type="date" id="start-date">
            </label>
            <label>
                End Date:
                <input type="date" id="end-date">
            </label>
            <button id="request-history" onclick="tracker.viewHistory()">Request Ticket History</button>
            <ul id="tickets">

            </ul>
            <div class="ticket">
                <h4 id="title">Request</h4>
                <p id="used">Hours Used</p>
                <p id="quoted">Hours Quoted</p>
                <p id="desc">Description</p>
                <ul>
                    <h5>Attachments</h5>
                    <li>+</li>
                </ul>
            </div>
        </div>
    </main>
    <footer>
        This website created by Wyatt Lee Sushinsky
    </footer>
</body>

<script>
    class Tracker {
        constructor() {
            this.tickets = [];
            this.attachments = [];

            //inputs
            this.$org = $("#org");
            this.$title = $("#title");
            this.$description = $("#description");
            this.$password = $("#password");
            this.$dateStart = $("start-date");
            this.$dateEnd = $("end-date");
            
            //views
            this.$ticketsList = $("ul#tickets");
            this.$ticketTitle = $(".ticket #title");
            this.$ticketUsed = $(".ticket #used");
            this.$ticketQuoted = $(".ticket #quoted");
            this.$ticketDescription = $(".ticket #desc");
            this.$ticketAttachments = $(".ticket ul");


            this.selectTicket(-1);
        }

        submitTicket = async () => {
            try {
                await $.post("/serve/submit-ticket", {
                    org: this.$org.val(),
                    ticket: {
                        title: this.$title.val(),
                        description: this.$description.val(),
                        attachments: this.attachments
                    }
                }, () => {
                    console.log("success");
                });
            } 
            catch(err) {
                console.log(err);   
            }
        }

        viewHistory = async () => {
            try {
                $.post("/serve/view-history", {
                    org: this.$org.val(),
                    password: this.$password.val(),
                    dateStart: this.$dateStart.val(),
                    dateEnd: this.$dateEnd.val()
                }, (data) => {
                    this.tickets = data.tickets;

                    this.$ticketsList.empty();

                    for (let i = 0; i < data.tickets.length; i++) {
                        this.$ticketsList.append(`<li id="${i}" onclick="tracker.selectTicket(${i})">${this.tickets[i].title}</li>`);
                    }
                });
            } 
            catch(err) {
                console.log(err);
            }
        }

        selectTicket(which) {
            let $items = $("#tickets li");
            $items.removeClass("selected");

            if (which > 0 && which < this.tickets.length) {
                let $which = $(`#tickets #${which}`);
                $which.addClass("selected");
    
                this.$ticketTitle.text("Request: " + this.tickets[which].title);
                this.$ticketUsed.text("Hours Used: " + this.tickets[which].used);
                this.$ticketQuoted.text("Hours Quoted: " + this.tickets[which].quoted);
                this.$ticketDescription.text("Description: " + this.tickets[which].description);
            }
            else {
                this.$ticketTitle.text("Request: ");
                this.$ticketUsed.text("Hours Used: ");
                this.$ticketQuoted.text("Hours Quoted: ");
                this.$ticketDescription.text("Description: ");
            }
        }

        toggleFold(folder) {
            let $folder = $(`.${folder}`);
            $folder.find('#pointer').text($folder.hasClass("folded") ? "v" : "^");
            $folder.toggleClass("folded");
        }
    }

    let tracker = new Tracker();
</script>
</html>